generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String  @id
  email     String  @unique
  username  String  @unique
  firstName String?
  lastName  String?
  image     String?

  skills String[]
  bio    String?

  github   String?
  linkedin String?
  website  String?

  isVerifiedStudent Boolean
  university String?

  adminOf  Organization[] @relation("Admins")
  memberOf Organization[] @relation("Members")

  hostEvents Event[] @relation("UserHost")
  attends    Event[] @relation("Attendees")
}

model Organization {
  id   String @id
  name String

  admins  User[] @relation("Admins")
  members User[] @relation("Members")

  hostEvents Event[] @relation("OrgHost")
}

model Event {
  id    String @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  title String

  location        String?
  locationDetails String?
  date            DateTime
  description     String
  image           String?
  type            EventType
  duration        Int
  tags            Tag[]

  userHostId String?
  userHost   User?         @relation("UserHost", fields: [userHostId], references: [id])
  orgHostId  String?
  orgHost    Organization? @relation("OrgHost", fields: [orgHostId], references: [id])

  attendees User[] @relation("Attendees")
}

model Tag {
  id       String  @id @default(dbgenerated("uuid_generate_v1()")) @db.Uuid
  category String
  name     String
  events   Event[]
}

model Verification_Code {
  userId    String   @id
  createdAt DateTime
  code      String
}

enum EventType {
  ONLINE_VIDEO
  ONLINE_AUDIO
  IN_PERSON
}
